# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import theory.gui.theory_pb2 as theory__pb2


class ReactorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.bye = channel.unary_unary(
        '/theory.Reactor/bye',
        request_serializer=theory__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.call = channel.unary_unary(
        '/theory.Reactor/call',
        request_serializer=theory__pb2.UiReq.SerializeToString,
        response_deserializer=theory__pb2.ReactorReqArr.FromString,
        )
    self.register = channel.unary_unary(
        '/theory.Reactor/register',
        request_serializer=theory__pb2.UiId.SerializeToString,
        response_deserializer=theory__pb2.ReactorReqArr.FromString,
        )
    self.syncFormData = channel.unary_unary(
        '/theory.Reactor/syncFormData',
        request_serializer=theory__pb2.FieldData.SerializeToString,
        response_deserializer=theory__pb2.JsonData.FromString,
        )
    self.callCmdSubFxn = channel.unary_unary(
        '/theory.Reactor/callCmdSubFxn',
        request_serializer=theory__pb2.CmdFxnInput.SerializeToString,
        response_deserializer=theory__pb2.JsonData.FromString,
        )
    self.adaptFromUi = channel.unary_unary(
        '/theory.Reactor/adaptFromUi',
        request_serializer=theory__pb2.uiData4Adapter.SerializeToString,
        response_deserializer=theory__pb2.JsonData.FromString,
        )
    self.upsertModelLst = channel.unary_unary(
        '/theory.Reactor/upsertModelLst',
        request_serializer=theory__pb2.MultiModelLstData.SerializeToString,
        response_deserializer=theory__pb2.ReactorReqArr.FromString,
        )
    self.getMdlTbl = channel.unary_unary(
        '/theory.Reactor/getMdlTbl',
        request_serializer=theory__pb2.MdlTblReq.SerializeToString,
        response_deserializer=theory__pb2.SpreadSheetData.FromString,
        )


class ReactorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def bye(self, request, context):
    """Should add auth in the future
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def call(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def register(self, request, context):
    """rpc register(UiId) returns (stream ReactorReq) {}
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def syncFormData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def callCmdSubFxn(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def adaptFromUi(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def upsertModelLst(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getMdlTbl(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReactorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'bye': grpc.unary_unary_rpc_method_handler(
          servicer.bye,
          request_deserializer=theory__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'call': grpc.unary_unary_rpc_method_handler(
          servicer.call,
          request_deserializer=theory__pb2.UiReq.FromString,
          response_serializer=theory__pb2.ReactorReqArr.SerializeToString,
      ),
      'register': grpc.unary_unary_rpc_method_handler(
          servicer.register,
          request_deserializer=theory__pb2.UiId.FromString,
          response_serializer=theory__pb2.ReactorReqArr.SerializeToString,
      ),
      'syncFormData': grpc.unary_unary_rpc_method_handler(
          servicer.syncFormData,
          request_deserializer=theory__pb2.FieldData.FromString,
          response_serializer=theory__pb2.JsonData.SerializeToString,
      ),
      'callCmdSubFxn': grpc.unary_unary_rpc_method_handler(
          servicer.callCmdSubFxn,
          request_deserializer=theory__pb2.CmdFxnInput.FromString,
          response_serializer=theory__pb2.JsonData.SerializeToString,
      ),
      'adaptFromUi': grpc.unary_unary_rpc_method_handler(
          servicer.adaptFromUi,
          request_deserializer=theory__pb2.uiData4Adapter.FromString,
          response_serializer=theory__pb2.JsonData.SerializeToString,
      ),
      'upsertModelLst': grpc.unary_unary_rpc_method_handler(
          servicer.upsertModelLst,
          request_deserializer=theory__pb2.MultiModelLstData.FromString,
          response_serializer=theory__pb2.ReactorReqArr.SerializeToString,
      ),
      'getMdlTbl': grpc.unary_unary_rpc_method_handler(
          servicer.getMdlTbl,
          request_deserializer=theory__pb2.MdlTblReq.FromString,
          response_serializer=theory__pb2.SpreadSheetData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'theory.Reactor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
